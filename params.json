{"body":"![alt text](http://dvwa.co.uk/images/wpscan_logo_407x80.png \"WPScan - WordPress Security Scanner\")\r\n\r\n#### LICENSE\r\n\r\nWPScan - WordPress Security Scanner\r\nCopyright (C), 2011-2012  Ryan Dewhurst AKA ethicalhack3r\r\n\r\nThis program is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nThis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License\r\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nryandewhurst at gmail\r\n\r\n#### INSTALL\r\n\r\nWPScan comes pre-installed on the following Linux distributions:\r\n\r\n- [BackTrack Linux](http://www.backtrack-linux.org/) since version 5 R1 in the /pentest/web/wpscan/ directory. \r\n- [SamuraiWTF](http://samurai.inguardians.com/)\r\n- [BackBox Linux](http://www.backbox.org/)\r\n\r\nWPScan only supports Ruby => 1.9.\r\n\r\n*Installing on Debian/Ubuntu:*\r\n\r\n```sudo apt-get install libcurl4-gnutls-dev libopenssl-ruby```\r\n\r\n``` sudo gem install typhoeus nokogiri json```\r\n\r\n*Installing on other nix:* (not tested)\r\n\r\n```sudo gem install typhoeus nokogiri json```\r\n\r\n*Installing on Mac OSX:*\r\n\r\n```sudo gem install typhoeus nokogiri json```\r\n\r\n#### KNOWN ISSUES\r\n\r\n  - Typhoeus segmentation fault\r\n      Update curl to at least v7.21 (you may have to install it from sources)\r\n      See http://code.google.com/p/wpscan/issues/detail?id=81\r\n\r\n  - If you have one the following errors : \"-bash: !t: event not found\", \"-bash: !u: event not found\"\r\n      It happens whith enumeration : just put the 't' or 'u' before the 'p!' : '-e tp!' instead of '-e p!t'\r\n\r\n#### WPSCAN ARGUMENTS\r\n\r\n    --url   | -u <target url>  The WordPress URL/domain to scan.\r\n\r\n    --force | -f Forces WPScan to not check if the remote site is running WordPress.\r\n\r\n    --enumerate | -e [option(s)]  Enumeration.\r\n     option :\r\n       u        usernames from id 1 to 10\r\n       u[10-20] usernames from id 10 to 20 (you must write [] chars)\r\n       p        plugins\r\n       p!       only vulnerable plugins\r\n       t        timthumbs\r\n     Multiple values are allowed : '-e tp' will enumerate timthumbs and plugins\r\n     If no option is supplied, the default is 'upt'\r\n\r\n    --follow-redirection  If the target url has a redirection, it will be followed without asking if you wanted to do so or not\r\n\r\n    --proxy  Supply a proxy in the format host:port (will override the one from conf/browser.conf.json)\r\n\r\n    --wordlist | -w <wordlist>  Supply a wordlist for the password bruter and do the brute.\r\n\r\n    --threads  | -t <number of threads>  The number of threads to use when multi-threading requests. (will override the value from conf/browser.conf.json)\r\n\r\n    --username | -U <username>  Only brute force the supplied username.\r\n\r\n    --help     | -h This help screen.\r\n\r\n    --verbose  | -v Verbose output.\r\n\r\n#### WPSCAN EXAMPLES\r\n\r\nDo 'non-intrusive' checks...\r\n\r\n```ruby wpscan.rb --url www.example.com```\r\n\r\nDo wordlist password brute force on enumerated users using 50 threads...\r\n\r\n```ruby wpscan.rb --url www.example.com --wordlist darkc0de.lst --threads 50```\r\n\r\nDo wordlist password brute force on the 'admin' username only...\r\n\r\n```ruby wpscan.rb --url www.example.com --wordlist darkc0de.lst --username admin```\r\n\r\nEnumerate instaled plugins...\r\n\r\n```ruby wpscan.rb --url www.example.com --enumerate p```\r\n\r\nRun all enumeration tools...\r\n\r\n```ruby wpscan.rb --url www.example.com --enumerate```\r\n\r\n#### WPSTOOLS ARGUMENTS\r\n\r\n    --help    | -h   This help screen.\r\n    --Verbose | -v   Verbose output.\r\n    --update  | -u   Update to the latest revision.\r\n    --generate_plugin_list [number of pages]  Generate a new data/plugins.txt file. (supply number of *pages* to parse, default : 150)\r\n    --gpl  Alias for --generate_plugin_list\r\n\r\n#### WPSTOOLS EXAMPLES\r\n\r\nGenerate a new 'most popular' plugin list, up to 150 pages...\r\n\r\n```ruby wpstools.rb --generate_plugin_list 150```\r\n\r\n#### PROJECT HOME\r\n\r\nwww.wpscan.org\r\n\r\n#### GIT REPOSITORY\r\n\r\nhttps://github.com/wpscanteam/wpscan\r\n\r\n#### ISSUES\r\n\r\nhttps://github.com/wpscanteam/wpscan/issues\r\n\r\n#### SPONSOR\r\n\r\nWPScan is sponsored by the [RandomStorm](http://www.randomstorm.com) Open Source Initiative.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Wpscan","tagline":"WPScan is a black box WordPress vulnerability scanner."}